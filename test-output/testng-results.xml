<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-30T16:07:41 IST" name="Suite" finished-at="2022-05-30T16:08:31 IST" duration-ms="50703">
    <groups>
    </groups>
    <test started-at="2022-05-30T16:07:41 IST" name="Test" finished-at="2022-05-30T16:08:31 IST" duration-ms="50703">
      <class name="insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle">
        <test-method is-config="true" signature="SetUpMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:07:41 IST" name="SetUpMethod" finished-at="2022-05-30T16:07:50 IST" duration-ms="8891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUpMethod -->
        <test-method signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:07:50 IST" name="insuranceCalculate" data-provider="vehData" finished-at="2022-05-30T16:07:58 IST" duration-ms="7703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Product_startdate=12/12/2022, Vehicle_Annual_Mileage=100, Product_Damageinsurance=Partial Coverage, PriceValidation_Gold=696.00, Insurant_City=Tirupathi, TC No=1, Vehicle_Date of Manufacture=09/04/2019, Insurant_Hobby=Speeding,Other, SelectOption=Silver, PriceValidation_Ultimate=2,604.00, PriceValidation_Silver=236.00, Vehicle_Make=Honda, Vehicle_Engine Performance=666, Insurant_occupation=Farmer, Insurant_Website=www.google.com, Vehicle_List_Price=888, Insurant_StreetAddress=ABC, Vehicle_No of Seats_motorcycle=2, Insurant_LastName=NNN, Product_OptionalProducts=Euro Protection, Insurant_ImageFilePath=??, Vehicle_Model=Motorcycle, Insurant_country=India, Insurant_zipcode=444061, TC Name=Verify Insurance Premium for Honda MotorCycle, Vehicle_CylinderCapacity=333, PriceValidation_Platinum=1,367.00, Insurant_FirstName=Prakash, Product_Insurancesum=5.000.000,00, Insurant_birthdate=12/12/1989, Insurant_gender=Male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method is-config="true" signature="ClosureMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:07:58 IST" name="ClosureMethod" finished-at="2022-05-30T16:07:59 IST" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClosureMethod -->
        <test-method is-config="true" signature="SetUpMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:07:59 IST" name="SetUpMethod" finished-at="2022-05-30T16:08:07 IST" duration-ms="8246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUpMethod -->
        <test-method signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:08:07 IST" name="insuranceCalculate" data-provider="vehData" finished-at="2022-05-30T16:08:14 IST" duration-ms="6640" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Product_startdate=12/12/2025, Vehicle_Annual_Mileage=100, Product_Damageinsurance=Partial Coverage, PriceValidation_Gold=696.00, Insurant_City=Norway, TC No=2, Vehicle_Date of Manufacture=09/04/2001, Insurant_Hobby=Speeding,Other, SelectOption=Gold, PriceValidation_Ultimate=2,626.00, PriceValidation_Silver=702.00, Vehicle_Make=Volvo, Vehicle_Engine Performance=900, Insurant_occupation=Farmer, Insurant_Website=www.firefox.com, Vehicle_List_Price=888, Insurant_StreetAddress=PQR, Vehicle_No of Seats_motorcycle=2, Insurant_LastName=NNN, Product_OptionalProducts=Euro Protection, Insurant_ImageFilePath=??, Vehicle_Model=Scooter, Insurant_country=Sweden, Insurant_zipcode=444061, TC Name=Verify Insurance Premium for Volvo Scooter, Vehicle_CylinderCapacity=900, PriceValidation_Platinum=1,379.00, Insurant_FirstName=Seema, Product_Insurancesum=20.000.000,00, Insurant_birthdate=12/12/1977, Insurant_gender=Female}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pricing for Gold plan is not Matching. expected [696.00] but found [772.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pricing for Gold plan is not Matching. expected [696.00] but found [772.00]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle.insuranceCalculate(EndtoEndTests_motorCycle.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method is-config="true" signature="ClosureMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:08:14 IST" name="ClosureMethod" finished-at="2022-05-30T16:08:15 IST" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClosureMethod -->
        <test-method is-config="true" signature="SetUpMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:08:15 IST" name="SetUpMethod" finished-at="2022-05-30T16:08:24 IST" duration-ms="8093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUpMethod -->
        <test-method signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:08:24 IST" name="insuranceCalculate" data-provider="vehData" finished-at="2022-05-30T16:08:30 IST" duration-ms="6232" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Product_startdate=12/12/2025, Vehicle_Annual_Mileage=100, Product_Damageinsurance=Partial Coverage, PriceValidation_Gold=274.00, Insurant_City=Colarado, TC No=3, Vehicle_Date of Manufacture=09/04/1989, Insurant_Hobby=Speeding,Other, SelectOption=Ultimate, PriceValidation_Ultimate=967.00, PriceValidation_Silver=258.00, Vehicle_Make=Ford, Vehicle_Engine Performance=100, Insurant_occupation=Farmer, Insurant_Website=www.yahoo.com, Vehicle_List_Price=1000, Insurant_StreetAddress=XYZ, Vehicle_No of Seats_motorcycle=2, Insurant_LastName=NNN, Product_OptionalProducts=Euro Protection, Insurant_ImageFilePath=??, Vehicle_Model=Moped, Insurant_country=Sweden, Insurant_zipcode=444061, TC Name=Verify Insurance Premium for Ford Moped, Vehicle_CylinderCapacity=100, PriceValidation_Platinum=507.00, Insurant_FirstName=Savali, Product_Insurancesum=3.000.000,00, Insurant_birthdate=12/12/1956, Insurant_gender=Female}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pricing for Silver plan is not Matching. expected [258.00] but found [93.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pricing for Silver plan is not Matching. expected [258.00] but found [93.00]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle.insuranceCalculate(EndtoEndTests_motorCycle.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method is-config="true" signature="ClosureMethod()[pri:0, instance:insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle@3d829787]" started-at="2022-05-30T16:08:30 IST" name="ClosureMethod" finished-at="2022-05-30T16:08:31 IST" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClosureMethod -->
      </class> <!-- insuranceCalculation_Motorcycle.EndtoEndTests_motorCycle -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
